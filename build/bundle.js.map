{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../target/wasm-pack/ascii/index.js","../../src/wasm.ts","../../src/asciiimg.ts","../../src/blobs.ts","../../src/Slider.svelte","../../src/GhLink.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","\nlet wasm;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayI32FromWasm0(ptr, len) {\n    return getInt32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n/**\n* @param {Uint8Array} img\n* @param {number} img_width\n* @param {number} img_height\n* @param {Int32Array} char_blocks\n* @param {number} block_width\n* @param {number} block_height\n* @param {number} contrast\n* @param {number} threshold\n* @returns {Int32Array}\n*/\nexport function make_ascii(img, img_width, img_height, char_blocks, block_width, block_height, contrast, threshold) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(img, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray32ToWasm0(char_blocks, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.make_ascii(retptr, ptr0, len0, img_width, img_height, ptr1, len1, block_width, block_height, contrast, threshold);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayI32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4);\n        return v2;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} char_img\n* @param {number} img_width\n* @param {number} char_width\n* @param {number} char_height\n* @returns {Int32Array}\n*/\nexport function get_char_blocks(char_img, img_width, char_width, char_height) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(char_img, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.get_char_blocks(retptr, ptr0, len0, img_width, char_width, char_height);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayI32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = import.meta.url.replace(/\\.js$/, '_bg.wasm');\n    }\n    const imports = {};\n\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n","// @ts-ignore\nimport wasm from './rust/Cargo.toml';\nimport 'svelte/store';\nlet charWidth;\nlet charHeight;\nlet chars = ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^`abcdefghijklmnopqrstuvwxyz{|}~'.split('');\nlet ascii;\nlet charData;\nexport async function init($charWidth, $charHeight) {\n    ascii = await wasm();\n    makeCharTable($charWidth, $charHeight);\n}\nfunction makeCharTable($charWidth, $charHeight, fontSize = '8px', fontFamily = 'monospace') {\n    const span = document.createElement('span');\n    span.style.fontFamily = fontFamily;\n    span.style.fontSize = fontSize;\n    span.textContent = 'X';\n    document.body.appendChild(span);\n    charWidth = span.offsetWidth;\n    charHeight = span.offsetHeight;\n    $charWidth.set(charWidth);\n    $charHeight.set(charHeight);\n    document.body.removeChild(span);\n    const can = document.createElement('canvas');\n    can.width = charWidth * chars.length;\n    can.height = charHeight;\n    const ctx = can.getContext('2d');\n    ctx.fillStyle = '#fff';\n    ctx.fillRect(0, 0, can.width, can.height);\n    ctx.fillStyle = '#000';\n    ctx.font = `${fontSize} ${fontFamily}`;\n    chars.forEach((c, i) => {\n        ctx.fillText(c, i * charWidth, charHeight);\n    });\n    const iData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n    charData = ascii.get_char_blocks(iData.data, can.width, charWidth, charHeight);\n    console.groupCollapsed('charData generated');\n    console.log('charWidth:', charWidth);\n    console.log('charHeight:', charHeight);\n    console.log('chars:', chars.join(''));\n    console.groupEnd();\n}\nexport function ctxToAscii(ctx, contrast = 1, threshold = 0) {\n    const { width, height } = ctx.canvas;\n    const iData = ctx.getImageData(0, 0, width, height);\n    console.time('make_ascii');\n    const asciiI32 = ascii.make_ascii(iData.data, width, height, charData, charWidth, charHeight, contrast, threshold);\n    console.timeEnd('make_ascii');\n    return i32ToAscii(asciiI32);\n}\nfunction i32ToAscii(vals) {\n    return Array.from(vals)\n        .map((num) => (num === -1 ? '\\n' : chars[num]))\n        .join('');\n}\n","import { ctxToAscii } from './wasm';\nlet camReqId;\nlet stream;\nexport async function startCam($ascii, $contrast, $threshold, width = 512, height = 288) {\n    const constraints = { audio: false, video: { width, height } };\n    const video = document.createElement('video');\n    const can = document.createElement('canvas');\n    let contrast;\n    let threshold;\n    $contrast.subscribe((val) => {\n        contrast = val;\n    });\n    $threshold.subscribe((val) => {\n        threshold = val;\n    });\n    can.width = width;\n    can.height = height;\n    const ctx = can.getContext('2d');\n    ctx.translate(width, 0);\n    ctx.scale(-1, 1);\n    stream = await navigator.mediaDevices.getUserMedia(constraints);\n    video.srcObject = stream;\n    video.onloadedmetadata = () => {\n        video.play();\n        function processFrame() {\n            ctx.drawImage(video, 0, 0);\n            $ascii.set(ctxToAscii(ctx, contrast, threshold));\n            camReqId = requestAnimationFrame(processFrame);\n        }\n        processFrame();\n    };\n}\nexport function stopCam() {\n    stream === null || stream === void 0 ? void 0 : stream.getTracks().forEach((track) => track.stop());\n    cancelAnimationFrame(camReqId);\n}\nexport async function fileToAscii(file, contrast, threshold, offsetX, offsetY) {\n    if (!/^image/i.test(file.type)) {\n        return '';\n    }\n    const img = await loadImage(window.URL.createObjectURL(file));\n    const can = document.createElement('canvas');\n    const ctx = can.getContext('2d');\n    const scaleW = img.width > 1000 ? 1000 / img.width : 1;\n    const scaleH = img.height > 1000 ? 1000 / img.height : 1;\n    const scale = Math.min(scaleW, scaleH);\n    const w = img.width * scale; // - img.width % charWidth;\n    const h = img.height * scale; // - img.height % charHeight;\n    can.width = w;\n    can.height = h;\n    ctx.fillStyle = '#fff';\n    ctx.fillRect(0, 0, w, h);\n    ctx.drawImage(img, offsetX, offsetY, w, h);\n    return ctxToAscii(ctx, contrast, threshold);\n}\nfunction loadImage(url) {\n    return new Promise((resolve) => {\n        const image = new Image();\n        image.onload = () => resolve(image);\n        image.src = url;\n    });\n}\n","import { ctxToAscii } from './wasm';\nconst H = 50;\nconst W = 50;\nconst rnd = (num) => Math.random() * num;\nconst isInRange = (val, limA, limB) => Math.min(limA, limB) <= val && val <= Math.max(limA, limB);\nconst findThreshold = (t, a, b) => {\n    if (isInRange(t, a, b)) {\n        return Math.abs(t - a) / Math.abs(a - b);\n    }\n    return undefined;\n};\nconst calculateWeights = (width, height, circles) => Array.from({ length: height + 1 }, (_v1, y) => Array.from({ length: width + 1 }, (_v2, x) => calculateWeight(x, y, circles)));\nconst calculateWeight = (cx, cy, circles) => circles.reduce((sum, { x, y, r }) => sum + (r * r) / ((cx - x) ** 2 + (cy - y) ** 2), 0);\nconst randomCircle = (maxX, maxY, minR, maxR) => ({\n    x: rnd(maxX),\n    y: rnd(maxY),\n    r: rnd(maxR - minR) + minR,\n    vx: rnd(0.4) - 0.2,\n    vy: rnd(0.4) - 0.2,\n});\nconst updateCircles = (circles, W, H) => circles.map(({ x, y, r, vx, vy }) => {\n    x = x + vx;\n    if (x < 0 || x > W) {\n        vx = -vx;\n    }\n    y = y + vy;\n    if (y < 0 || y > H) {\n        vy = -vy;\n    }\n    return { x, y, r, vx, vy };\n});\nconst calculateLines = (ws, t = 1) => {\n    const lines = [];\n    ws.forEach((row, y) => row.forEach((wA, x) => {\n        var _a, _b;\n        const points = [];\n        const wB = ws[y][x + 1];\n        const wC = (_a = ws[y + 1]) === null || _a === void 0 ? void 0 : _a[x + 1];\n        const wD = (_b = ws[y + 1]) === null || _b === void 0 ? void 0 : _b[x];\n        const p1 = findThreshold(t, wA, wB);\n        const p2 = findThreshold(t, wA, wD);\n        const p3 = findThreshold(t, wD, wC);\n        const p4 = findThreshold(t, wB, wC);\n        if (p1 !== undefined)\n            points.push([x + p1, y]);\n        if (p2 !== undefined)\n            points.push([x, y + p2]);\n        if (p3 !== undefined)\n            points.push([x + p3, y + 1]);\n        if (p4 !== undefined)\n            points.push([x + 1, y + p4]);\n        if (points.length === 2) {\n            lines.push(points);\n        }\n    }));\n    return lines;\n};\nfunction drawLines(lines, ctx) {\n    const cellH = ctx.canvas.height / H;\n    const cellW = ctx.canvas.width / W;\n    lines.forEach(([[x1, y1], [x2, y2]]) => {\n        ctx.beginPath();\n        ctx.moveTo(x1 * cellW, y1 * cellH);\n        ctx.lineTo(x2 * cellW, y2 * cellH);\n        ctx.stroke();\n    });\n}\nlet blobReqId;\nexport const startBlobs = ($ascii, width = 300, height = 300) => {\n    const can = document.createElement('canvas');\n    can.width = width;\n    can.height = height;\n    const ctx = can.getContext('2d');\n    const loop = (circles) => {\n        const weights = calculateWeights(W, H, circles);\n        ctx.clearRect(0, 0, width, height);\n        const lines1 = calculateLines(weights);\n        ctx.fillStyle = '#fff';\n        ctx.fillRect(0, 0, width, height);\n        ctx.lineWidth = 2;\n        drawLines(lines1, ctx);\n        $ascii.set(ctxToAscii(ctx));\n        blobReqId = requestAnimationFrame(() => loop(updateCircles(circles, W, H)));\n    };\n    const circles = Array.from({ length: 10 }, () => randomCircle(W, H, 1, 7));\n    loop(circles);\n};\nexport const stopBlobs = () => {\n    cancelAnimationFrame(blobReqId);\n};\n","<script lang=\"ts\">\n  export let name = '';\n  export let value = 0;\n  export let min = 0;\n  export let max = 100;\n  export let disabled = false;\n</script>\n\n<div>\n  <div class:disabled>{name}: {value}</div>\n  <input type=\"range\" {min} {max} {disabled} bind:value />\n</div>\n\n<style>\n  div {\n    max-width: 120px;\n    align-self: center;\n  }\n  .disabled {\n    opacity: .5;\n  }\n  input {\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  export let repo = '';\n</script>\n\n<a href={`https://github.com/${repo}`} target=\"_blank\"><slot /></a>\n","<script lang=\"ts\">\n  import {writable} from 'svelte/store';\n  import {init} from './wasm';\n  import {startCam, stopCam, fileToAscii} from './asciiimg';\n  import {startBlobs, stopBlobs} from './blobs';\n  import Slider from './Slider.svelte';\n  import GhLink from './GhLink.svelte';\n\n  enum STATE {\n    IMAGE,\n    CAM,\n    BLOBS,\n  }\n\n  let state = STATE.IMAGE;\n  let ascii = writable('');\n  let contrast = writable(25);\n  let threshold = writable(128);\n  let charWidth = writable(0);\n  let charHeight = writable(0);\n  let offsetX = 0;\n  let offsetY = 0;\n  let files: FileList;\n\n  init(charWidth, charHeight);\n\n  const toggleState = (newState: STATE) => (state = state === newState ? STATE.IMAGE : newState);\n\n  $: state === STATE.IMAGE &&\n    files &&\n    fileToAscii(files[0], $contrast, $threshold, offsetX, offsetY).then((res) => ascii.set(res));\n\n  $: if (state === STATE.CAM) {\n    startCam(ascii, contrast, threshold);\n  } else {\n    stopCam();\n    ascii.set('');\n  }\n\n  $: if (state === STATE.BLOBS) {\n    startBlobs(ascii);\n  } else {\n    stopBlobs();\n    ascii.set('');\n  }\n</script>\n\n<section>\n  <h2>Ascii Cam</h2>\n  <div class=\"buttons\">\n    <label\n      class=\"button\"\n      on:change={() => {\n        state = STATE.IMAGE;\n      }}\n    >\n      From file\n      <input type=\"file\" accept=\"image/*\" bind:files />\n    </label>\n    <div class=\"button\" on:click={() => toggleState(STATE.CAM)}>\n      {state === STATE.CAM ? 'Stop webcam' : 'Start webcam'}\n    </div>\n    <div class=\"button\" on:click={() => toggleState(STATE.BLOBS)}>\n      {state === STATE.BLOBS ? 'Stop blobs' : 'Start blobs'}\n    </div>\n  </div>\n  <div>\n    <Slider disabled={state === STATE.BLOBS} name=\"Contrast\" min={-100} max={100} bind:value={$contrast} />\n    <Slider disabled={state !== STATE.IMAGE} name=\"Left\" min={0} max={$charWidth} bind:value={offsetX} />\n  </div>\n  <div>\n    <Slider disabled={state === STATE.BLOBS} name=\"Threshold\" min={0} max={255} bind:value={$threshold} />\n    <Slider disabled={state !== STATE.IMAGE} name=\"Top\" min={0} max={$charHeight} bind:value={offsetY} />\n  </div>\n  <div class=\"output\">\n    {#if $ascii}\n      <pre>{$ascii}</pre>\n    {/if}\n  </div>\n  <footer>\n    made with <GhLink repo=\"rust-lang/rust\">rust</GhLink>, <GhLink repo=\"rustwasm/wasm-bindgen\">wasm-bindgen</GhLink> & <GhLink\n      repo=\"sveltejs/svelte\">svelte</GhLink\n    > &mdash; <GhLink repo=\"andylnd/asciimg\">github repo</GhLink>\n  </footer>\n</section>\n\n<style>\n  pre {\n    font-size: 10px;\n    font-family: monospace;\n    justify-self: center;\n    box-shadow: 0 0 5px black;\n    display: inline-block;\n    padding: 16px;\n    border-radius: 16px;\n  }\n  .output {\n    grid-column: 1/-1;\n    text-align: center;\n  }\n\n  section {\n    display: grid;\n    grid: auto auto 1fr auto / 1fr auto auto auto 1fr;\n    gap: 16px;\n    height: 100%;\n  }\n  h2 {\n    grid-column: 1/-1;\n    text-align: center;\n  }\n  label > input {\n    display: none;\n  }\n  .button {\n    display: block;\n    border: 2px solid black;\n    border-radius: 0;\n    margin: 0;\n    text-align: center;\n    padding: 8px;\n    margin: 4px;\n    background-color: #eee;\n    cursor: pointer;\n    max-width: 120px;\n    width: 120px;\n  }\n  .button:hover {\n    background-color: #fff;\n  }\n\n  .buttons {\n    grid-column: 2/3;\n  }\n  footer {\n    justify-self: center;\n    grid-column: 1/-1;\n  }\n</style>\n","import App from './App.svelte';\nvar app = new App({\n    target: document.body\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","bind","index","props","bound","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","wasm","cachegetUint8Memory0","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","ptr","buffer","memory","Uint8Array","cachegetUint32Memory0","passArray32ToWasm0","Uint32Array","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayI32FromWasm0","subarray","async","replace","Request","URL","fetch","module","imports","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","Instance","load","exports","__wbindgen_wasm_module","img","img_width","img_height","char_blocks","block_width","block_height","contrast","threshold","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_malloc","len0","ptr1","len1","make_ascii","r0","r1","v2","__wbindgen_free","char_img","char_width","char_height","get_char_blocks","v1","charWidth","charHeight","ascii","charData","camReqId","stream","chars","split","$charWidth","$charHeight","fontSize","fontFamily","span","style","textContent","body","offsetWidth","offsetHeight","can","width","height","getContext","fillStyle","fillRect","font","fillText","iData","getImageData","canvas","groupCollapsed","log","join","groupEnd","makeCharTable","ctxToAscii","time","asciiI32","timeEnd","vals","num","fileToAscii","file","offsetX","offsetY","test","url","window","createObjectURL","image","Image","onload","scaleW","scaleH","scale","min","w","h","drawImage","rnd","random","findThreshold","t","val","limA","limB","abs","calculateWeight","cx","cy","circles","reduce","sum","x","y","r","blobReqId","startBlobs","$ascii","loop","weights","_v1","_v2","calculateWeights","clearRect","lines1","ws","lines","row","wA","_a","_b","points","wB","wC","wD","p1","p2","p3","p4","calculateLines","lineWidth","cellH","cellW","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","drawLines","requestAnimationFrame","W","H","vx","vy","updateCircles","randomCircle","maxY","minR","maxR","slot_ctx","repo","CAM","BLOBS","IMAGE","$contrast","$threshold","constraints","audio","video","translate","navigator","mediaDevices","getUserMedia","srcObject","onloadedmetadata","play","processFrame","getTracks","track","cancelAnimationFrame","state","STATE","toggleState"],"mappings":"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"}